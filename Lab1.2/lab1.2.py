'''
В качестве входных данных для программы должны использоваться факты,
указывающие желательную характеристику, которую должен иметь кустарник,
а результатом работы программы должен быть список растений,
обладающий всеми необходимыми характеристиками.
'''

# в фактах содержатся пары кустарник-характеристики
global facts
facts = {
    "древовидная гортензия": [
        "устойчивость к затенению",
        "устойчивость к городским условиям",
        "пригодность для кадочного выращивания",
        "быстрота роста"
    ],

    "олеандр": [
        "устойчивость к холоду",
        "устойчивость к городским условиям",
        "пригодность для кадочного выращивания",
        "простота культивирования",
        "быстрота роста"
    ],

    "войлочная восковница": [
        "устойчивость к затенению",
        "устойчивость к засухе",
        "устойчивость к влажной почве",
        "устойчивость к городским условиям",
        "простота культивирования",
        "быстрота роста"
    ],

    "жимолость": [
        "устойчивость к городским условиям",
        "пригодность для кадочного выращивания",
        "простота культивирования",
        "быстрота роста"
    ],

    "гардения": [
        "устойчивость к затенению",
        "устойчивость к кислой почве",
        "пригодность для кадочного выращивания"
    ],

    "обыкновенный мозжевельник": [
        "устойчивость к холоду",
        "устойчивость к засухе",
        "устойчивость к кислой почве",
        "устойчивость к городским условиям",
        "простота культивирования"
    ],

    "ольховолистая клетра": [
        "устойчивость к холоду",
        "устойчивость к затенению",
        "устойчивость к влажной почве",
        "устойчивость к кислой почве",
        "простота культивирования"
    ],

    "татарский кизил": [
        "устойчивость к холоду",
        "устойчивость к затенению",
        "устойчивость к влажной почве",
        "устойчивость к городским условиям",
        "простота культивирования"
    ],

    "японская аукуба": [
        "устойчивость к затенению",
        "устойчивость к засухе",
        "пригодность для кадочного выращивания",
        "простота культивирования"
    ],

    "канадский рододендрон": [
        "устойчивость к затенению",
        "устойчивость к влажной почве",
        "устойчивость к кислой почве",
        "пригодность для кадочного выращивания"
    ]
}

if __name__ == '__main__':
    while True:
        # выводы, сделанные на основе фактов
        conclusion = []

        # факт, который вводит пользователь
        user_fact = str(input("\nTell me a fact\n"))

        # проверяем содержит ли факт пользователя известные нашей базе факты
        for fact in facts:
            if user_fact.__contains__(fact[0]) and not conclusion.__contains__(fact[1]):
                conclusion.append(fact[1])

        # если несколько фактов совпало с вводом пользователя, то перечисляем все возможные выводы
        if len(conclusion) >= 1:
            print("This plant may have a", end=' ')

            # избавляемся от взаимоисключающих вариантов
            if conclusion.__contains__("balanced nutrition") and len(conclusion) > 1:
                conclusion.remove("balanced nutrition")

            # составляем конечный вывод
            for conclusion_part in conclusion:
                print(conclusion_part, end=" ")
                if conclusion_part != get_last_element(conclusion):
                    print("and/or", end=' ')

        # если у нас нет информации о фактах пользователя, то выводим соответствующее сообщение
        else:
            print("I don't have enough information")

        conclusion.clear()
